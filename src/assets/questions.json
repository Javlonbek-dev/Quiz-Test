{
    "questions": [
    {
    "questionText": "What keyword is used to define a variable in C#?",
    "options": [
    {
    "text": "let"
    },
    {
    "text": "var",
    "correct": true
    },
    {
    "text": "const"
    },
    {
    "text": "int"
    }
    ],
    "explanation": "The 'var' keyword is used to define a variable in C#."
    },
    {
    "questionText": "Which of the following is NOT a valid data type in C#?",
    "options": [
    {
    "text": "int"
    },
    {
    "text": "float"
    },
    {
    "text": "boolean"
    },
    {
    "text": "character",
    "correct": true
    }
    ],
    "explanation": "'character' is not a valid data type in C#. The correct data type is 'char'."
    },
    {
    "questionText": "How do you define a method in C#?",
    "options": [
    {
    "text": "function myMethod()"
    },
    {
    "text": "method myMethod()"
    },
    {
    "text": "void myMethod()",
    "correct": true
    },
    {
    "text": "def myMethod()"
    }
    ],
    "explanation": "In C#, a method is defined using the 'void' keyword followed by the method name and parentheses."
    },
    {
    "questionText": "What is the correct syntax to create a new instance of a class in C#?",
    "options": [
    {
    "text": "MyClass newObject = new MyClass();",
    "correct": true
    },
    {
    "text": "MyClass newObject = MyClass();"
    },
    {
    "text": "newObject = new MyClass();"
    },
    {
    "text": "newObject = MyClass();"
    }
    ],
    "explanation": "To create a new instance of a class in C#, the correct syntax is 'MyClass newObject = new MyClass();'"
    },
    {
    "questionText": "Which access modifier makes a class member accessible only within the same class?",
    "options": [
    {
    "text": "public"
    },
    {
    "text": "private",
    "correct": true
    },
    {
    "text": "protected"
    },
    {
    "text": "internal"
    }
    ],
    "explanation": "The 'private' access modifier makes a class member accessible only within the same class."
    },
    {
    "questionText": "What does the 'static' keyword mean in C#?",
    "options": [
    {
    "text": "It indicates that a method does not return a value."
    },
    {
    "text": "It indicates that a method can be accessed without creating an instance of the class.",
    "correct": true
    },
    {
    "text": "It indicates that a variable can have multiple values."
    },
    {
    "text": "It indicates that a variable cannot be modified once assigned."
    }
    ],
    "explanation": "The 'static' keyword in C# indicates that a method can be accessed without creating an instance of the class."
    },
    {
    "questionText": "How do you add elements to a List<T> in C#?",
    "options": [
    {
    "text": "list.add(element);",
    "correct": true
    },
    {
    "text": "list.push(element);"
    },
    {
    "text": "list.insert(element);"
    },
    {
    "text": "list.append(element);"
    }
    ],
    "explanation": "To add elements to a List<T> in C#, you use the 'Add' method. The correct syntax is 'list.Add(element);'"
    },
    {
    "questionText": "Which statement is used to exit a loop in C#?",
    "options": [
    {
    "text": "break",
    "correct": true
    },
    {
    "text": "return"
    },
    {
    "text": "continue"
    },
    {
    "text": "exit"
    }
    ],
    "explanation": "The 'break' statement is used to exit a loop in C#."
    },
    {
    "questionText": "What is the default access modifier for class members in C#?",
    "options": [
    {
    "text": "public"
    },
    {
    "text": "private"
    },
    {
    "text": "protected"
    },
    {
    "text": "internal",
    "correct": true
    }
    ],
    "explanation": "The default access modifier for class members in C# is 'internal'."
    }
    ]
    }